#!/usr/bin/env bash

# Script for converting markdown files to HTML
# with github flavored format and stylesheet
#
# If no file is provided, then it checks for a README.md
# in the current directory and converts it
#
#  - exit with 3 when no file was converted
#  - exit with 4 when file provide does not exists

# Exit if any command fails
set -e

md_file="$1"
default_dir="./.markdown"
templates="$HOME/.local/bin/templates"
stylesheet="$templates/github-markdown-dark.css"
stylesheet_url="https://raw.githubusercontent.com/sindresorhus/github-markdown-css/main/github-markdown-dark.css"

# If templates isn found, download it
get_github_markdown()
{
    if [ ! -f "$stylesheet" ]; then
        curl --silent "$stylesheet_url" --output "$stylesheet"
    fi
}

main()
{
    if [ -z "${md_file}" ]; then
        if [ -f "./README.md" ]; then
            md_file="README.md"
        else
            echo "mark: No file provided and no README detected"
            exit 3
        fi
    elif [ ! -f "$md_file" ]; then
        echo "mark: $md_file doesn't exists"
        exit 4
    fi

    get_github_markdown

    [ -d "$default_dir" ] || mkdir "$default_dir"

    if [ ! -f "$default_dir/style.css" ]; then
        ln -s "$stylesheet" "$default_dir/style.css"
    fi
    
    tmpfile=$(mktemp)
    md2html --github --output="$tmpfile" "$md_file"

    output_html="${default_dir}/${md_file}.html"
    copy_path=$(realpath "$output_html")

    cat "$templates/start-mark.html" \
        "$tmpfile" \
        "$templates/end-mark.html" > "${copy_path}"

    echo "Created: $copy_path"
    echo "$copy_path" | gpaste-client

    rm "$tmpfile"
}

main

