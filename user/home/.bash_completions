# shellcheck source=/dev/null

#
#   Completion
#

# Auto cd when typing a directory
shopt -s autocd

# git
[[ -f $HOME/.git-completion.bash ]] && source "$HOME/.git-completion.bash"

# pipx
command -v pipx >/dev/null && eval "$(register-python-argcomplete pipx)"

if command -v npm >/dev/null; then
    if [[ ! -f $HOME/.npm-completion.bash ]]; then
        npm completion > "$HOME/.npm-completion.bash"
    fi
    source ~/.npm-completion.bash
fi

# poetry
if command -v poetry >/dev/null; then
    if [[ ! -f $HOME/.poetry-completion.bash ]]; then
        poetry completions bash > "$HOME/.poetry-completion.bash"
    fi
    source ~/.poetry-completion.bash
fi

# tldr
if command -v tldr >/dev/null; then
    if [[ ! -f $HOME/.tldr-completion.bash ]]; then
        tldr --print-completion bash > "$HOME/.tldr-completion.bash"
    fi
    source ~/.tldr-completion.bash
fi

# dotnet
if command -v dotnet >/dev/null; then
    _dotnet_bash_complete()
    {
        local cur="${COMP_WORDS[COMP_CWORD]}" IFS=$'\n'
        local candidates

        read -d '' -ra candidates < <(dotnet complete --position "${COMP_POINT}" "${COMP_LINE}" 2>/dev/null)

        read -d '' -ra COMPREPLY < <(compgen -W "${candidates[*]:-}" -- "$cur")
    }

    complete -f -F _dotnet_bash_complete dotnet
fi

# vim: set ft=sh:
